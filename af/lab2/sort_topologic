from _collections import deque

with open("graf.txt") as fisier:
    matrice = []
    n, m = [int(z) for z in fisier.readline().split()]
    for i in range(n):
        linie = list(map(int, fisier.readline().split()))
        matrice.append(linie)
print(matrice)

def lista_adiacenta(orientat=0, nume_fisier="graf.txt"):
    n = 0

    with open("graf.txt") as fisier:
        linie = fisier.readline()
        n, m = [int(z) for z in linie.split()]
        a = [[] for i in range(n + 1)]
        for linie in fisier:
            x, y = [int(z) for z in linie.split()]
            a[x].append(y)
            if not orientat:
                a[y].append(x)
    return a

b=lista_adiacenta(0)
b.remove([])
print(b)


viz = deque()
cur = deque()
cur.append(1)
rezolvat=[]
def dfs(cur, viz, muchii=lista_adiacenta(1)):
    global rezolvat
    if cur!=[]:
        rezolvat.append(cur[len(cur)-1])
    if cur[len(cur)-1] not in viz:
        viz.append(cur[len(cur)-1])
    ok=0
    for x in muchii[cur[len(cur)-1]]:
        if x not in viz:
            cur.append(x)
            dfs(cur,viz)
    cur.pop()
    if len(cur)==0:
        for i in range(1, len(muchii) + 1):
            if i not in rezolvat:
                cur.append(i)
                dfs(cur, viz)
    return rezolvat

print(dfs(cur,viz))

"""7 8
1 3
2 4
3 4
3 6
5 6
6 7
3 7"""

